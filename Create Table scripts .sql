DECLARE
  table_names SYS.ODCIVARCHAR2LIST := SYS.ODCIVARCHAR2LIST('PRODUCT','CUSTOMER','CUSTOMER_ADDRESS','CUSTOMER_CONTACT',
  'SALES_REPRESENTATIVE','INVENTORY','WAREHOUSE','EXTERNAL_TRANSACTION','INTERNAL_TRANSACTION','DRIVER_DETAILS', 
  'VEHICLE_DETAILS','SALES_REP_ACTIVITY');
  table_exists NUMBER;
BEGIN
  FOR i IN 1..table_names.COUNT LOOP
    SELECT COUNT(*) INTO table_exists FROM user_tables WHERE table_name = table_names(i);

    IF table_exists = 0 and table_names(i)='PRODUCT' THEN
      EXECUTE IMMEDIATE 'CREATE TABLE PRODUCT(
						PRODUCT_ID NUMBER,
						PRODUCT_NAME VARCHAR2(30) NOT NULL,
						PRODUCT_COST_PRICE NUMBER(20,2) NOT NULL,
						PRODUCT_SELLING_PRICE NUMBER(20,2) NOT NULL,
						PRODUCT_DESCRIPTION VARCHAR2(50) NOT NULL
						)';
            DBMS_OUTPUT.PUT_LINE('PRODUCT TABLE IS CREATED');
    ELSIF table_exists=0 and table_names(i)='CUSTOMER' THEN
        EXECUTE IMMEDIATE 'CREATE TABLE CUSTOMER(
					       CUSTOMER_ID NUMBER,
						   CUSTOMER_MEETING_ID NUMBER,
						   REF_WAREHOUSE_ID NUMBER,
						   CUSTOMER_NAME VARCHAR2(50) NOT NULL,
                           CUSTOMER_TYPE VARCHAR2(20) NOT NULL
						   )';
            DBMS_OUTPUT.PUT_LINE('CUSTOMER TABLE IS CREATED');
	ELSIF table_exists=0 and table_names(i)='CUSTOMER_ADDRESS' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE CUSTOMER_ADDRESS(
							CUSTOMER_ID NUMBER,
							ADDRESS_LINE_1 VARCHAR2(100),
							ADDRESS_LINE_2 VARCHAR2(100),
							CITY VARCHAR2(50) NOT NULL,
							REGION VARCHAR2(50)NOT NULL,
							STATE VARCHAR2(50),
							ZIP_CODE NUMBER,
							COUNTRY VARCHAR2(50)
							)';
            DBMS_OUTPUT.PUT_LINE('CUSTOMER_ADDRESS TABLE IS CREATED');
	ELSIF table_exists=0 and table_names(i)='CUSTOMER_CONTACT' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE CUSTOMER_CONTACT(
							CUSTOMER_ID NUMBER,
							MOBILE_NO VARCHAR2(30),
							CUSTOMER_EMAIL VARCHAR2(50)
							)';
            DBMS_OUTPUT.PUT_LINE('CUSTOMER_CONTACT TABLE IS CREATED');
	ELSIF table_exists=0 and table_names(i)='SALES_REPRESENTATIVE' THEN
        EXECUTE IMMEDIATE ' CREATE TABLE SALES_REPRESENTATIVE(
							SALESREP_ID NUMBER,
							REF_WAREHOUSE_ID NUMBER,
							FIRST_NAME VARCHAR2(50) NOT NULL,
							MIDDLE_NAME VARCHAR2(50),
							LAST_NAME VARCHAR2(50),
							SALESREP_CONTACT VARCHAR2(30),
							SALESREP_EMAIL VARCHAR2(50)
							)';
            DBMS_OUTPUT.PUT_LINE('SALES_REPRESENTATIVE TABLE IS CREATED');
	ELSIF table_exists=0 and table_names(i)='EXTERNAL_TRANSACTION' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE EXTERNAL_TRANSACTION(
							TRANSACTION_ID NUMBER,
							PRODUCT_ID NUMBER,
							CUSTOMER_ID NUMBER,
							REF_WAREHOUSE_ID NUMBER,
							SALESREP_ID NUMBER,
							TRANSACTION_TYPE VARCHAR2(20) NOT NULL,
							TRANSACTION_DATE_TIME TIMESTAMP,
							QUANTITY NUMBER NOT NULL
							)';
            DBMS_OUTPUT.PUT_LINE('EXTERNAL_TRANSACTION TABLE IS CREATED');
	ELSIF table_exists=0 and table_names(i)='INTERNAL_TRANSACTION' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE INTERNAL_TRANSACTION(
							TRANSACTION_ID NUMBER,
							WAREHOUSE_FROM VARCHAR2(30),
							WAREHOUSE_TO VARCHAR2(30),
							PRODUCT_ID NUMBER,
							SALESREP_ID NUMBER,
							TRANSACTION_DATE_TIME TIMESTAMP,
							QUANTITY NUMBER NOT NULL
							)';
            DBMS_OUTPUT.PUT_LINE('INTERNAL_TRANSACTION TABLE IS CREATED');
	ELSIF table_exists=0 and table_names(i)='SALES_REP_ACTIVITY' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE SALES_REP_ACTIVITY(
							MEETING_ID NUMBER,
							SALESREP_ID NUMBER,
							CUSTOMER_NAME VARCHAR2(50) NOT NULL,
							INTERACTION_TYPE VARCHAR2(30),
							CUSTOMER_TYPE VARCHAR2(30),
							INTERACTION_DATE DATE NOT NULL,
							INTERACTION_DURATION VARCHAR2(10),
							COMMENTS VARCHAR2(100),
							FOLLOWUP_FLAG VARCHAR2(20),
							CUSTOMER_CONVERTED_FLAG VARCHAR2(20),
							CUSTOMER_CURRENT_ADDRESS VARCHAR2(100) NOT NULL
							)';
            DBMS_OUTPUT.PUT_LINE('SALES_REP_ACTIVITY TABLE IS CREATED');
    ELSIF table_exists=0 and table_names(i)='INVENTORY' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE INVENTORY(
							INVENTORY_ID NUMBER,
							PRODUCT_ID NUMBER,
							WAREHOUSE_ID NUMBER,
							PRODUCT_QUANTITY NUMBER NOT NULL
							)';
            DBMS_OUTPUT.PUT_LINE('INVENTORY TABLE IS CREATED');	
    ELSIF table_exists=0 and table_names(i)='WAREHOUSE' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE WAREHOUSE(
							WAREHOUSE_ID NUMBER,
							WAREHOUSE_NAME VARCHAR2(50),
							WAREHOUSE_ADDRESS VARCHAR2(50),
							WAREHOUSE_LOCATION VARCHAR2(50),
							VEHICLE_ID NUMBER
							)';
            DBMS_OUTPUT.PUT_LINE('WAREHOUSE TABLE IS CREATED');	
    ELSIF table_exists=0 and table_names(i)='DRIVER_DETAILS' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE DRIVER_DETAILS(
							DRIVER_ID NUMBER,
							DRIVER_NAME VARCHAR2(50),
							DRIVER_CONTACT VARCHAR2(30),
							EFFECTIVE_DATE DATE,
							DRIVER_LICENCE VARCHAR2(30)
							)';
            DBMS_OUTPUT.PUT_LINE('DRIVER_DETAILS TABLE IS CREATED');
    ELSIF table_exists=0 and table_names(i)='VEHICLE_DETAILS' THEN
        EXECUTE IMMEDIATE  'CREATE TABLE VEHICLE_DETAILS(
							VEHICLE_ID NUMBER,
							DRIVER_ID NUMBER,
							VEHICLE_REGISTRATION_NUMBER VARCHAR2(50)
							)';
            DBMS_OUTPUT.PUT_LINE('VEHICLE_DETAILS TABLE IS CREATED');
	ELSE
		DBMS_OUTPUT.PUT_LINE(table_names(i)||' TABLE EXISTS IN DATABASE');
    END IF;
  END LOOP;
END;
